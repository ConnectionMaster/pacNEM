
<script type="text/javascript">

  var socket = io.connect(window.location.protocol + '//' + window.location.host);
  var client_game = new ClientGame(socket);
  var players = new Array();

    var registerKeyListeners = function()
    {
        document.onkeydown = function(e) {
            if([37, 38, 39, 40].indexOf(e.keyCode) > -1)
                socket.emit('keydown', e.keyCode);
        };

        window.addEventListener("keydown", function(e) {
            // space and arrow keys
            if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1)
                e.preventDefault();
        }, false);
    }

    var initSocketIO = function (socket, client_game, players)
    {
        socket.on('ready', function(rawdata) {
            client_game.serverReady(rawdata);
        });

        socket.on('new', function(rawdata) {
           $("#game").show();
            displayUserDetails(rawdata);
            client_game.serverReady(rawdata);
            registerKeyListeners();
        });

        socket.on('end_of_game', function() {
            client_game.serverEndOfGame();
        });

        socket.on('update', client_game.serverUpdate);

        socket.on('rooms_update', function(rawdata)
        {
            var data = JSON.parse(rawdata);
            var sid  = data['sid'];
            var $rooms = $("#rooms");
            var rooms  = data["rooms"];
            var isAuth = $("#username").val().length > 0 && $("#address").val().length > 0;

            // clear UI
            $rooms.empty();

            if (isAuth)
                $("#save_auth").attr("disabled", "disabled");
            else
                $("#save_auth").removeAttr("disabled");

            displayRooms($rooms, sid, data);

            if (! rooms.length)
                // create a new room, no one else online
                socket.emit("create_room");
        });
    };

    var displayUserDetails = function(rawdata)
    {
        var $details = $("#game_details").first();
        // clear players list first
        $details.empty();

        var $userRow = $details.find(".players-list li.hidden").first();

        // interpret data, prepare display
        var data = JSON.parse(rawdata);

        for (var i = 0 ; i < players.length ; i++) {
            var $row  = $userRow.clone().removeClass("hidden");
            var color = GHOSTS_COLORS[i % GHOSTS_COLORS.length];

            // set player name and add to DOM
            $row.find(".player").first().text(players[i]);
            $row.find(".glyphicon").first().css("color", color);
            $row.appendTo($details);
        }
    };

    var displayRooms = function($rooms, sid, data)
    {
        if (! data["rooms"].length) {
            //XXX currently no room => button "Create"
            return 0;
        }

        for (var i = 0; i < data["rooms"].length; i++)
            displayRoom($rooms, sid, data["rooms"][i], data["users"]);

        return data["rooms"].length;
    };

    var displayRoomAction = function(rooms, $button, callback)
    {
        $button.click(function() {
            callback(rooms);
            return false;
        });

        $button.removeClass("hidden");
    };

    var displayRoom = function($rooms, sid, roomdata, usersdata)
    {
        var is_member = $.inArray(sid, roomdata['users']) != -1;
        var template  = $("#room-template").html();
        var $rooms    = $("#rooms");
        var $thisRoom = $("<div/>").html(template);

        $thisRoom.addClass("hidden").appendTo($rooms);

        // now `thisRoom` will contain the actual "lounge"
        $thisRoom = $rooms.find(".pacnem-lounge").last();

        var $members  = $thisRoom.find(".room-members-wrapper ul");
        var $memberRow= $thisRoom.find(".room-members-wrapper ul li.hidden").first();

        // players array will now be filled with current room's users
        players = [];

        // now create the members entries for this room
        for (var i = 0 ; i < roomdata['users'].length ; i++) {
            var user = usersdata[roomdata['users'][i]] ? usersdata[roomdata['users'][i]] : roomdata['users'][i];

            $currentRow = $memberRow.clone()
                                  .removeClass("hidden")
                                  .appendTo($members);

            $currentRow.find(".member-name").first().text(user);

            players.push(user);
        }

        // define which buttons must be active
        if (is_member) {
            if (roomdata["status"] == "join") {
                var $button = $thisRoom.find(".roomActionJoin").first();
                displayRoomAction(roomdata, $button, function(roomdata) { socket.emit("run_game"); });
            }
            else if (roomdata["status"] == "wait") {
                var $button = $thisRoom.find(".roomActionCancel").first();
                displayRoomAction(roomdata, $button, function(roomdata) { socket.emit("cancel_game"); });
            }

            // leave button always if member of room
            var $button = $thisRoom.find(".roomActionLeave").first();
            displayRoomAction(roomdata, $button, function(roomdata) { socket.emit("leave_room"); });
        }
        else if (roomdata["status"] == "join") {
            var $button = $thisRoom.find(".roomActionJoin").first();

            if (roomdata["is_full"])
                $button.prop("disabled", true);
            else
                displayRoomAction(roomdata, $button, function(roomdata) { socket.emit("join_room", roomdata["id"]); });
        }

        $thisRoom.parent().removeClass("hidden");
        return is_member;
    };

    initSocketIO(socket, client_game, players);

    var emitUsername = function()
    {
        $("#currentUser-username").html("&nbsp;" + $("#username").val());
        $("#currentUser").fadeIn("slow");
        $(".hide-on-auth").fadeOut("slow");
        $(".show-on-auth").fadeIn("slow");
        socket.emit('change_username', $("#username").val());
    };

    $(document).ready(function()
    {
        $("#save_auth").click(function() {
            emitUsername();
            return false;
        });

        // document read behaviour
        if ($("#username").val())
            emitUsername();
    });
</script>

<div id="pacnem-main-wrapper" class="row col-md-10 col-md-offset-1">
    <div id="your_room">
        <div class="panel panel-info">
            <div class="panel-heading hide-on-auth" style="text-align: left;">
                <span class="glyphicon glyphicon-user"></span>&nbsp;
                <div style="display: inline;"><span>Pac</span><span class="NEMifiedText">nem</span><span>&nbsp; Multiplayer Pacman Game</span></div>
            </div>
            <div class="panel-body">
                <p class="text-justify hide-on-auth">
                    <span>Welcome to the </span><span>Pac</span><span class="NEMifiedText">nem</span><span> Game. This game is a Free &amp; Open Source NodeJS web application
                    which you may download for installation or Play online.</span>
                    <span>This project will use the </span><span class="NEMifiedText">nem</span><span> Blockchain to save and retrieve High Scores.</span><br />
                </p>
                <p class="text-justify hide-on-auth">
                    <span>Please enter a username below and hit the 'Send' button when you are ready to join Multiplayer Rooms for </span>
                    <span>Pac</span><span class="NEMifiedText">nem</span><span>. Your Username will be stored in your Browser and you can change
                    it anytime in the Game.</span>
                </p>
                <div class="user-form form form-horizontal">
                    <div class="col-md-3">
                        <div class="input-group">
                            <span class="input-group-addon" id="describe-username"><span class="glyphicon glyphicon-user"></span></span>
                            <input id="username" type="text" class="form-control" placeholder="Username" aria-describedby="describe-username" maxlength="20" />
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="input-group">
                            <span class="input-group-addon" id="describe-address"><img src="/img/NEM_100x100.png" style="height: 20px;"/></span>
                            <input id="address" type="text" class="form-control xem-address" placeholder="XEM Address" aria-describedby="describe-address" maxlength="46" />
                        </div>
                    </div>
                    <div id="create_my_room" class="col-md-2 text-left">
                        <a id="save_auth" class="btn btn-primary" role="button" href="#"><span class="glyphicon glyphicon-floppy-disk"></span>&nbsp;Save</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="container-fluid col-md-4">
            <div id="rooms" class="row"></div>

            <div id="game_details" class="row">
                <ul class="list-group players-list">
                    <li class="list-group-item hidden">
                        <h4 class="list-group-item-heading">
                            <span class="glyphicon glyphicon-user"></span>&nbsp;
                            <span class="player"></span>
                        </h4>
                        <div class="list-group-item-text">
                            <div class="row">
                                <div class="col-md-6">Score</div>
                                <div class="col-md-6 pc-score"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">Lifes</div>
                                <div class="col-md-6 pc-lifes"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">Combo</div>
                                <div class="col-md-6 pc-combo"></div>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>

        <div id="game" class="game col-md-8">
            <canvas id="myCanvas" height="0" width="0"></canvas>
        </div>
    </div>

</div>

<div id="room-template" class="hidden">
    <div class="row pacnem-lounge">
        <div class="col-md-7 room-members-wrapper text-left">
            <ul class="members">
                <li class="member hidden"><span class="glyphicon glyphicon-user"></span>&nbsp;<span class="member-name"></span></li>
            </ul>
        </div>
        <div class="col-md-5 room-actions-wrapper">
            <a href="#" class="btn btn-block btn-primary roomActionJoin hidden">Join Room</a>
            <a href="#" class="btn btn-block btn-default roomActionPlay hidden">Play</a>
            <a href="#" class="btn btn-block btn-success roomActionCancel hidden">Starting in 10 sec...</a>
            <a href="#" class="btn btn-block btn-danger roomActionLeave hidden">Leave Room</a>
        </div>
    </div>
</div>
